// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestCache.Models;

namespace TestCache.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220220095433_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("TestCache.Models.Attempt", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Attempts");
                });

            modelBuilder.Entity("TestCache.Models.Card", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("InfoId")
                        .HasColumnType("int");

                    b.Property<string>("Pin")
                        .HasColumnType("longtext");

                    b.HasKey("Number");

                    b.HasIndex("InfoId");

                    b.HasIndex("Number");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("TestCache.Models.CardInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.Property<bool>("Blocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Locked")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("CardInfo");
                });

            modelBuilder.Entity("TestCache.Models.LogMessages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("TestCache.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Details")
                        .HasColumnType("longtext");

                    b.Property<int>("OperationCode")
                        .HasColumnType("int");

                    b.Property<int>("Sum")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("TestCache.Models.Card", b =>
                {
                    b.HasOne("TestCache.Models.CardInfo", "Info")
                        .WithMany()
                        .HasForeignKey("InfoId");

                    b.Navigation("Info");
                });
#pragma warning restore 612, 618
        }
    }
}
